#http://127.0.0.1:5000/
import os
from qa_system.qa_model import QASystem
from recommendation_engine.recommender import Recommender
from media_processing.text_processor import TextProcessor
import sqlite3
import bcrypt
import logging
from werkzeug.utils import secure_filename
from flask import Flask, request, redirect, jsonify, url_for, render_template, send_file, session
from pdfminer.high_level import extract_text
from datetime import datetime

app = Flask(__name__)

app.secret_key = 'secret_key'
app.config['UPLOAD_FOLDER'] = "uploads"
app.config['SECRET_KEY'] = 'your_secret_key'

qa_system = QASystem()
recommender = Recommender()
text_processor = TextProcessor()

if not os.path.exists(app.config['UPLOAD_FOLDER']):
    os.makedirs(app.config['UPLOAD_FOLDER'])

def init_db():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,  
            username TEXT UNIQUE NOT NULL,        
            email TEXT UNIQUE NOT NULL,           
            password TEXT NOT NULL                
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS feedback (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            feature TEXT NOT NULL,
            feedback TEXT NOT NULL,
            submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS contact_messages (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            email TEXT NOT NULL,
            message TEXT NOT NULL,
            submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS pdf_uploads (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            filename TEXT NOT NULL,
            extracted_text TEXT NOT NULL,
            uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    conn.commit()
    conn.close()
init_db()

logging.basicConfig(filename="app.log", level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

@app.before_request
def log_request():
    logging.info(f"User accessed: {request.path} | Method: {request.method}")

@app.errorhandler(500)
def internal_error(error):
    logging.error(f"Internal Server Error: {error}")
    return "An internal error occurred.", 500

@app.errorhandler(404)
def not_found_error(error):
    logging.warning(f"Page not found: {request.path}")
    return "Page not found.", 404

def hash_password(password):
    return bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')

def verify_password(password, hashed):
    return bcrypt.checkpw(password.encode('utf-8'), hashed.encode('utf-8'))

EXTRACTED_TEXT_FOLDER = os.path.expanduser("~/Downloads")

@app.route('/', methods=['GET'])
def home():
    username = session.get('username')
    return render_template('home.html', username=username)

@app.route('/contact', methods=['GET', 'POST'])
def contact():
    module = request.args.get('module', 'General Inquiry')
    
    if request.method == 'GET':
        return f'''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Contact Us</title>
            <style>
            body {{
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }}
            header {{
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }}
            header h1 {{
                margin: 0;
            }}
            main {{
                margin: 2rem;
            }}
            section {{
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }}
        .form-group {{
                    display: flex;
                    flex-direction: column;
                }}
            .container {{
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }}
            a {{
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }}
            a:hover {{
                background-color: #005BB5;
            }}
            footer {{
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }}
        </style>
        </head>
        <body>
            <header>
                <h1>Contact Us</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <a href="/ask">Ask a Question</a>
                    <a href="/recommend">Get Recommendations</a>
                    <a href="/extract_text">Extract Text from PDF</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
            <main>
                <div class="container">
                    <form method="POST" action="/contact">
                        <label for="name">Name:</label><br>
                        <input type="text" id="name" name="name" placeholder="Your Name" required><br><br>
                        <label for="email">Email:</label><br>
                        <input type="email" id="email" name="email" placeholder="Your Email" required><br><br>
                        <label for="message">Message:</label><br>
                        <textarea id="message" name="message" placeholder="Your Message" rows="5" required></textarea><br><br>
                        <button type="submit">Submit</button>
                    </form>
                </div>
                <div class="container">
                    <h2>Feature Feedback</h2>
                    <form method="POST" action="/contact" class="form-group">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="module">Feature:</label>
                        <input type="text" id="module" name="module" value="{module}" readonly> <!-- Auto-filled -->
                        <label for="feature_feedback">Feature Feedback:</label>
                        <textarea id="feature_feedback" name="feature_feedback" rows="4" required></textarea>
                        <button type="submit" name="feedback_type" value="feature">Submit Feature Feedback</button>
                    </form>
                </div>
            </main>
        </body>
        </html>
        '''
    elif request.method == 'POST':
        feedback_type = request.form.get('feedback_type')

        if feedback_type == "contact":
            name = request.form.get('name')
            email = request.form.get('email')
            message = request.form.get('message')

            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute("INSERT INTO contact_messages (name, email, message) VALUES (?, ?, ?)", (name, email, message))
            conn.commit()
            conn.close()

            return '''
            <h1>Thank You!</h1>
            <p>Your message has been received. We will get back to you soon.</p>
            <a href="/">Return to Home</a>
            '''

        elif feedback_type == "feature":
            name = request.form.get('name')
            module = request.form.get('module')
            feedback = request.form.get('feature_feedback')

            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute("INSERT INTO feedback (name, feature, feedback) VALUES (?, ?, ?)", (name, module, feedback))
            conn.commit()
            conn.close()

            return '''
            <h1>Thank You!</h1>
            <p>Your feature feedback has been received.</p>
            <a href="/">Return to Home</a>
            '''

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'GET':
        return '''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Login - AI Academic Assistant</title>
            <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }
            header {
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }
            header h1 {
                margin: 0;
            }
            main {
                margin: 2rem;
            }
            section {
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }
            .container {
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            a {
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }
            a:hover {
                background-color: #005BB5;
            }
            footer {
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }
        </style>
        </head>
        <body>
            <header>
                <h1>Login</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
            <main>
                <div class="container">
                    <form method="POST" action="/login">
                        <label for="username">Username:</label><br>
                        <input type="text" id="username" name="username" placeholder="Enter your username" required><br>
                        <label for="password">Password:</label><br>
                        <input type="password" id="password" name="password" placeholder="Enter your password" required><br><br>
                        <button type="submit">Login</button>
                        <p></p>
                        <a href = "/signup">New? Sign Up</a>
                    </form>
                </div>
            </main>
            <footer>
                &copy; 2024 AI Academic Assistant ~ Kevaughn Benjamin. All rights reserved.
            </footer>
        </body>
        </html>
        '''
    elif request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute('SELECT password FROM users WHERE username = ?', (username,))
        result = cursor.fetchone()
        conn.close()

        if result and verify_password(password, result[0]):
            session['username'] = username
            session['logged_in'] = True
            session.permanent = True
            return redirect(url_for('dashboard'))
        else:
            return "<h1>Invalid credentials. Try again.</h1>"

@app.route('/signup', methods=['GET', 'POST'])
def signup():
    if request.method == 'GET':
        return '''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Login - AI Academic Assistant</title>
            <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }
            header {
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }
            header h1 {
                margin: 0;
            }
            main {
                margin: 2rem;
            }
            section {
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }
            .container {
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            a {
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }
            a:hover {
                background-color: #005BB5;
            }
            footer {
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }
        </style>
        </head>
        <body>
            <header>
                <h1>Sign Up</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
                <a href="/login" style="color: white; text-decoration: none; background-color: #005BB5; padding: 0.5rem 1rem; border-radius: 5px;">Login</a>
        </header>
            <main>
                <div class="container">
                    <form method="POST">
                    <label for="username">Username:</label><br>
                    <input type="text" id="username" name="username" required><br>
                    <label for="email">Email:</label><br>
                    <input type="email" id="email" name="email" required><br>
                    <label for="password">Password:</label><br>
                    <input type="password" id="password" name="password" required><br>
                    <button type="submit">Sign Up</button>
                </form>
                </div>
            </main>
            <footer>
                &copy; 2024 AI Academic Assistant ~ Kevaughn Benjamin. All rights reserved.
            </footer>
        </body>
        </html>
        '''
    elif request.method == 'POST':
        username = request.form['username']
        email = request.form['email']
        password = hash_password(request.form['password'])

        try:
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(
                'INSERT INTO users (username, email, password) VALUES (?, ?, ?)',
                (username, email, password)
            )
            conn.commit()
            conn.close()
            return '<h1>Signup successful!</h1><a href="/login">Login</a>'
        except sqlite3.IntegrityError:
            return '<h1>Username or email already exists. Try again.</h1>'
    return

@app.route('/logout')
def logout():
    session.pop('username', None)
    session.pop('logged_in', None)
    return redirect(url_for('home'))

@app.route('/ask', methods=['GET', 'POST'])
def ask():
    if request.method == 'GET':
        return '''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ask a Question</title>
            <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }
            header {
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }
            header h1 {
                margin: 0;
            }
            main {
                margin: 2rem;
            }
            section {
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }
            .container {
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            a {
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }
            a:hover {
                background-color: #005BB5;
            }
            footer {
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }
        </style>
        
        </head>
        <body>
            <header>
                <h1>Ask a Question</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <a href="/ask">Ask a Question</a>
                    <a href="/recommend">Get Recommendations</a>
                    <a href="/extract_text">Extract Text from PDF</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
            <main>
                <div class="container">
                    <form method="POST" action="/ask">
                        <label for="question">Question:</label><br>
                        <input type="text" id="question" name="question" placeholder="Enter your question" required><br><br>
                        <label for="context">Context (optional):</label><br>
                        <textarea id="context" name="context" placeholder="Enter context here..."></textarea><br><br>
                        <button type="submit">Get Answer</button>
                    </form>
                </div>
            </main>
        </body>
        <footer><a href="/contact?module=Ask a Question" class="feedback-button">Give Feedback</a></footer>
        </html>
        '''
    else:
        question = request.form['question']
        context = request.form.get('context', '')

        result = qa_system.answer_question(question, context)

        return f'''
        <h1>Answer:</h1>
        <p><strong>{result["answer"]}</strong></p>
        <p><small>Confidence: {round(result["confidence"] * 100, 2)}%</small></p>
        <h3>Context:</h3>
        <p>{result["context"].replace(result["answer"], f'<span class="highlight">{result["answer"]}</span>')}</p>
        <a href="/ask">Ask Another Question</a>
        '''

@app.route('/answer', methods=['POST'])
def answer():
    try:
        data = request.get_json()
        question = data.get('question', '').strip()
        context = data.get('context', '').strip()

        if not question:
            return jsonify({"error": "Missing question"}), 400

        result = qa_system.answer_question(question, context)

        return jsonify({
            "answer": result["answer"],
            "confidence": result["confidence"],
            "context": result["context"]
        })

    except Exception as e:
        return jsonify({"error": f"Internal Server Error: {e}"}), 500

@app.route('/recommend', methods=['GET', 'POST'])
def recommend():
    if request.method == 'GET':
        return '''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Get Recommendations</title>
            <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }
            header {
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }
            header h1 {
                margin: 0;
            }
            main {
                margin: 2rem;
            }
            section {
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }
            .container {
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            a {
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }
            a:hover {
                background-color: #005BB5;
            }
            footer {
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }
        </style>
        </head>
        <body>
            <header>
                <h1>Get Recommendations</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <a href="/ask">Ask a Question</a>
                    <a href="/recommend">Get Recommendations</a>
                    <a href="/extract_text">Extract Text from PDF</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
            <main>
                <div class="container">
                    <form method="POST" action="/recommend">
                        <label for="query">Enter a Query:</label><br>
                        <input type="text" id="query" name="query" placeholder="e.g., machine learning books" required><br><br>
                        <button type="submit">Get Recommendations</button>
                    </form>
                </div>
            </main>
        </body>
        <footer><a href="/contact?module=Recommendations" class="feedback-button">Give Feedback</a></footer>
        </html>
        '''
    elif request.method == 'POST':
        query = request.form.get('query')

        if not query:
            return '''
            <!DOCTYPE html>
            <html>
            <head>
                <title>Error</title>
            </head>
            <body>
                <h1>Error</h1>
                <p>You must provide a query. <a href="/recommend">Try Again</a></p>
            </body>
            </html>
            '''

        recommendations = recommender.get_recommendations(query)

        recommendations_html = ''.join(f'<li>{rec}</li>' for rec in recommendations)

        return f'''
        <!DOCTYPE html>
        <html>
        <head>
            <title>Recommendations</title>
        </head>
        <body>
            <h1>Recommendations for "{query}"</h1>
            <ul>
                {recommendations_html}
            </ul>
            <a href="/recommend">Get More Recommendations</a>
        </body>
        </html>
        '''

@app.route('/extract_text', methods=['GET', 'POST'])
def extract_text_route():
    if request.method == 'POST':
        pdf_file = request.files['pdf']
        if pdf_file and pdf_file.filename.endswith('.pdf'):
            filename = secure_filename(pdf_file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            pdf_file.save(filepath)

            extracted_text = extract_text(filepath)
            formatted_text = extracted_text.replace("\n\n", "<br><br>")

            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute("INSERT INTO pdf_uploads (filename, extracted_text) VALUES (?, ?)", (filename, extracted_text))
            conn.commit()
            conn.close()

            return redirect(url_for('view_extracted_text', filename=filename))
    
    return '''
    <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ask a Question</title>
            <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }
            header {
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }
            header h1 {
                margin: 0;
            }
            main {
                margin: 2rem;
            }
            section {
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }
            .container {
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            a {
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }
            a:hover {
                background-color: #005BB5;
            }
            footer {
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }
        </style>
        
        </head>
        <body>
            <header>
                <h1>Ask a Question</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <a href="/ask">Ask a Question</a>
                    <a href="/recommend">Get Recommendations</a>
                    <a href="/extract_text">Extract Text from PDF</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
        <main>
            <h1>Upload PDF</h1>
            <form method="post" enctype="multipart/form-data">
                <input type="file" name="pdf" accept=".pdf" required><br><br>
                <button type="submit">Upload & Extract</button>
            </form>
            <a href="/manage_pdfs">Manage Uploaded PDFs</a>
        </main>
    </body>
    <footer><a href="/contact?module=Feedback" class="feedback-button">Give Feedback</a></footer>
    </html>
    '''

@app.route('/manage_pdfs')
def manage_pdfs():
    conn = sqlite3.connect('data.db')
    cursor = conn.cursor()
    cursor.execute("SELECT id, filename, uploaded_at FROM pdf_uploads ORDER BY uploaded_at DESC")
    files = cursor.fetchall()
    conn.close()

    file_list = "".join([f"""
        <tr>
            <td>{file[1]}</td>
            <td>{file[2]}</td>
            <td><a href='/view_text/{file[1]}'>View</a></td>
            <td><a href='/delete_pdf/{file[0]}'>Delete</a></td>
        </tr>""" for file in files])

    return f'''
    <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Contact Us</title>
            <style>
            body {{
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
                scroll-behavior: smooth;
            }}
            header {{
                background-color: #0078D7;
                color: white;
                padding: 1rem;
            }}
            header h1 {{
                margin: 0;
            }}
            main {{
                margin: 2rem;
            }}
            section {{
            padding: 100px;
            margin: 50px 0;
            border: 1px solid #ccc;
        }}
        .form-group {{
                    display: flex;
                    flex-direction: column;
                }}
            .container {{
                max-width: 600px;
                margin: 0 auto;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }}
            a {{
                display: inline-block;
                margin: 1rem 0;
                padding: 0.75rem 1.5rem;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }}
            a:hover {{
                background-color: #005BB5;
            }}
            footer {{
                margin-top: 2rem;
                font-size: 0.9rem;
                color: #666;
            }}
            .textcentering {{
                text-align: center;
            }}
        </style>
        </head>
    <body>
    <header>
                <h1>Manage Uploaded PDFs</h1>
            </header>
            <header style="display: flex; justify-content: space-between; align-items: center; background-color: #0078D7; color: white;">
                <div style="display: flex; justify-content: space-between; align-items: left;">
                    <a href="/">Home</a>
                    <a href="/ask">Ask a Question</a>
                    <a href="/recommend">Get Recommendations</a>
                    <a href="/extract_text">Extract Text from PDF</a>
                    <h4> | </h4>
                    <a href="/contact">Contact Us</a>
                </div>
        </header>
        <div>
    <table border="1" >
        <tr>
            <th>Filename</th>
            <th>Uploaded At</th>
            <th>Actions</th>
        </tr>
        {file_list}
    </table>
    </div>
    <br>
    <a href="/">Back to Home</a>
    </body>
    </html>
    '''

@app.route('/view_text/<filename>')
def view_extracted_text(filename):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("SELECT extracted_text FROM pdf_uploads WHERE filename=?", (filename,))
    result = cursor.fetchone()
    conn.close()

    if result:
        extracted_text = result[0].replace("\n\n", "<br><br>")
        return f'''
        <h1>Extracted Text - {filename}</h1>
        <div style="white-space: pre-line; border: 1px solid #ccc; padding: 10px;">{extracted_text}</div>
        <br>
        <a href="/">Back to Home</a>
        <a href="/download/{filename}">Download Extracted Text</a>
        '''
    return "<h1>No text found</h1>"

@app.route('/download/<filename>')
def download_extracted_text(filename):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("SELECT extracted_text FROM pdf_uploads WHERE filename=?", (filename,))
    result = cursor.fetchone()
    conn.close()

    if result:
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], f"{filename}.txt")
        with open(filepath, "w") as f:
            f.write(result[0])

        return send_file(filepath, as_attachment=True)

    return "<h1>File not found</h1>"

@app.route('/delete_pdf/<int:file_id>')
def delete_pdf(file_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    
    cursor.execute("SELECT filename FROM pdf_uploads WHERE id=?", (file_id,))
    file = cursor.fetchone()
    
    if file:
        filename = file[0]
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        if os.path.exists(filepath):
            os.remove(filepath)

        cursor.execute("DELETE FROM pdf_uploads WHERE id=?", (file_id,))
        conn.commit()
    
    conn.close()
    return redirect(url_for('manage_pdfs'))

@app.route('/dashboard')
def dashboard():
    if 'username' not in session or session['username'] != 'admin':
        return "<h1>Unauthorized Access</h1><a href='/'>Go to Home</a>"
    
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    cursor.execute("SELECT name, email, message, submitted_at FROM contact_messages ORDER BY submitted_at DESC")
    messages = cursor.fetchall()
    conn.close()

    message_list = "".join([f"""
        <tr>
            <td>{m[0]}</td>
            <td>{m[1]}</td>
            <td>{m[2]}</td>
            <td>{m[3]}</td>
        </tr>""" for m in messages])
    
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    cursor.execute("SELECT name, feature, feedback, submitted_at FROM feedback ORDER BY submitted_at DESC")
    messages = cursor.fetchall()
    conn.close()

    feedback_list = "".join([f"""
        <tr>
            <td>{m[0]}</td>
            <td>{m[1]}</td>
            <td>{m[2]}</td>
            <td>{m[3]}</td>
        </tr>""" for m in messages])

    return f'''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
                text-align: center;
            }}
            h1 {{
                margin: 20px 0;
            }}
            table {{
                width: 80%;
                margin: 20px auto;
                border-collapse: collapse;
                background: white;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }}
            th, td {{
                border: 1px solid #ccc;
                padding: 10px;
                text-align: left;
            }}
            th {{
                background-color: #0078D7;
                color: white;
            }}
            a {{
                display: inline-block;
                margin: 20px 0;
                padding: 10px 20px;
                background-color: #0078D7;
                color: white;
                text-decoration: none;
                border-radius: 5px;
            }}
            a:hover {{
                background-color: #005BB5;
            }}
        </style>
    </head>
    <body>
        <h1>Admin Dashboard</h1>
        <section>
        <h2>Contact Messages</h2>
        <table>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Message</th>
                <th>Submitted At</th>
            </tr>
            {message_list}
        </table>
        </section>
        <section>
        <h2>Feedback</h2>
        <table>
            <tr>
                <th>Name</th>
                <th>Feature</th>
                <th>Message</th>
                <th>Submitted At</th>
            </tr>
            {feedback_list}
        </table>
        </section>
        <a href="/">Go to Home</a>
    </body>
    </html>
    '''

if __name__ == '__main__':
    app.run(port=5000, debug=True)
